name: CI

on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build And Push Docker Images
        env:
          REGISTRY: ${{ secrets.DOCKER_USERNAME }}
          BE_SERVICE: swarmtest
          NGINX_SERVICE: nginx
          SMB_SERVICE: samba
        run: |-
          docker build -t $REGISTRY/$BE_SERVICE:node -f ./node/Dockerfile ./node
          docker push $REGISTRY/$BE_SERVICE:node
          docker build -t $REGISTRY/$BE_SERVICE:php -f ./php/Dockerfile ./php
          docker push $REGISTRY/$BE_SERVICE:php
          docker build -t $REGISTRY/$SMB_SERVICE -f ./samba/Dockerfile ./samba
          docker push $REGISTRY/$SMB_SERVICE
          docker build -t $REGISTRY/$NGINX_SERVICE -f ./nginx/Dockerfile ./nginx
          docker push $REGISTRY/$NGINX_SERVICE
          
  apply_terraform:
    needs: build-image
    runs-on: ubuntu-latest
    outputs:
      public_ips: ${{ steps.ids.outputs.public_ips }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Initialize Terraform
        run: terraform init
      - name: Apply Terraform
        run: terraform apply -auto-approve
      - name: Copy Terraform State to S3 Bucket
        run: |
          aws s3 cp terraform.tfstate s3://kha-app-s3/state/
      - name: Get IPs of instances
        id: ids
        run: |
          ips=$(terraform output -json | jq -r '.instance_ips.value | join(",")')
          echo "public_ips=$ips" >> "$GITHUB_OUTPUT"

  init_swarm:
    needs: apply_terraform
    runs-on: ubuntu-latest
    outputs:
      join_token: ${{ steps.init_swarm.outputs.join_token}}
      swarm_ip: ${{ steps.init_swarm.outputs.swarm_ip }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Add SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Init Docker Swarm On Instance 1
        id: init_swarm
        run: |
          IPS="${{ needs.apply_terraform.outputs.public_ips }}"
          IFS=',' read -ra ADDR <<< "$IPS"
          SWARM_IP=${ADDR[0]}
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$SWARM_IP "sudo apt-get update \
            && sudo apt-get install docker.io -y \
            && sudo systemctl start docker \
            && sudo systemctl enable docker \
            && sudo mkdir /home/data \
            && sudo docker swarm init --advertise-addr=$SWARM_IP"
          JOIN_TOKEN=$(ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$SWARM_IP "sudo docker swarm join-token -q worker")
          echo "join_token=$JOIN_TOKEN" >> "$GITHUB_OUTPUT"
          echo "swarm_ip=$SWARM_IP" >> "$GITHUB_OUTPUT"

  join-swarm:
    needs: [apply_terraform,init_swarm]
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Instance 2 joins Docker Swarm
        id: join_swarm
        run: |
          IPS="${{ needs.apply_terraform.outputs.public_ips }}"
          IFS=',' read -ra ADDR <<< "$IPS"
          SWARM_IP=${ADDR[0]}
          JOIN_IP=${ADDR[1]}
          SWARM_USER="ubuntu"
          echo "swarm_info=$SWARM_IP,$SWARM_USER" >> "$GITHUB_OUTPUT"
          echo "$SWARM_IP,$SWARM_USER" > swarm_info.txt
          JOIN_TOKEN="${{ needs.init_swarm.outputs.join_token }}"
          FORMAT_TOKEN=$(echo $JOIN_TOKEN | tr -d '\n\r')
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$JOIN_IP "sudo apt-get update \
            && sudo apt-get install docker.io -y \
            && sudo systemctl start docker \
            && sudo systemctl enable docker \
            && sudo mkdir /home/data \
            && sudo docker swarm join --token $FORMAT_TOKEN $SWARM_IP:2377"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Copy Docker Info to S3 Bucket
        run: |
          aws s3 cp swarm_info.txt s3://kha-app-s3/swarm_info/